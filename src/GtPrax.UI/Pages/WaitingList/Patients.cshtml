@page "/WaitingList/{id:objectid}/Patients"
@using GtPrax.Application.UseCases.PatientRecord
@model GtPrax.UI.Pages.WaitingList.PatientsModel
@{
	ViewData["Title"] = Model.GetNode().Title;
	ViewData["HasFooter"] = true;
	Model.BuildHeaderMenu(new { id = Model.Id });
	var dateTimeConverter = new GermanDateTimeConverter();
	var createUrl = Url.PageLink(Model.GetNode<CreatePatientModel>().Page, null, new { id = Model.Id });
	var editPatientPage = Model.GetNode<EditPatientModel>().Page;
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        <div class="columns is-gapless is-mobile">
            <div class="column is-flex is-align-items-center">@Html.CreateBreadcrumb(new { id = Model.Id })</div>
            <div class="column is-narrow">
                <div class="dropdown is-hoverable is-right">
                    <div class="dropdown-trigger">
                        <button class="button" aria-haspopup="true" aria-controls="user-action">
                            <span class="icon is-small">
                                <i class="fas fa-ellipsis-h"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="user-action" role="menu">
                        <div class="dropdown-content">
                            <div class="dropdown-item">
                                <div>Gesamtanzahl: @Model.TotalCount</div>
                            </div>
                            <hr class="dropdown-divider" />
                            @if (!Model.IsDisabled)
                            {
                                <a href="@createUrl" class="dropdown-item">
                                    Patient(in) anlegen
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h1 class="subtitle">#@(Model.WaitingListName ?? "Unbekannt")</h1>

        @if (!ModelState.IsValid)
        {
            <div class="notification is-danger">
                <button class="delete"></button>
                <div asp-validation-summary="All"></div>
            </div>
        }

        <div class="columns is-variable is-1">
            <div class="column is-narrow">
                <div id="filterItems" class="select">
                    <select asp-items="Model.FilterItems" disabled="@Model.IsDisabled"></select>
                </div>
            </div>
        </div>

        <form method="post">
            <fieldset disabled="@Model.IsDisabled">
                <div class="field">
                    <div class="control">
                        <input class="input" type="text" asp-for="SearchTerms" placeholder="Suchbegriffe (Name / Geburtsdatum / Telefonnummer)" />
                    </div>
                    <span asp-validation-for="SearchTerms"></span>
                </div>
            </fieldset>
        </form>

        <div class="list">
            @foreach (var i in Model.Items)
            {
                <div class="list-item list-item-clickable" data-url="@(Url.PageLink(editPatientPage, null, new { id = i.Id }))">
                    <div class="list-item-image">
                        <i class="fa-solid fa-hospital-user fa-2x has-text-info"></i>
                    </div>
                    <div class="list-item-content">
                        <div class="list-item-title">@i.Name</div>
                        <div class="list-item-description">
                            <span class="tag is-rounded">
                                @dateTimeConverter.ToDateTime(i.LastModified) &commat; @(i.LastModifiedBy ?? "Unbekannt")
                            </span>
                            <span class="tag is-rounded is-success">@dateTimeConverter.ToDate(i.BirthDate)</span>
                            <span class="tag is-rounded is-info">@i.PhoneNumber</span>
                            @if (!string.IsNullOrEmpty(i.ReferralReason))
                            {
                                <span class="tag is-rounded is-warning">@i.ReferralReason</span>
                            }
                            @if (i.Tags!.Contains(PatientRecordTag.Priority))
                            {
                                <span class="tag is-rounded is-danger"><i class="fa-solid fa-star"></i></span>
                            }
                            @if (i.Tags!.Contains(PatientRecordTag.Jumper))
                            {
                                <span class="tag is-rounded is-black"><i class="fa-solid fa-horse"></i></span>
                            }
                            @if (i.Tags!.Contains(PatientRecordTag.Neurofeedback))
                            {
                                <span class="tag is-rounded is-black"><i class="fa-solid fa-brain"></i></span>
                            }
                            @if (i.HasTherapyDaysWithHomeVisit)
                            {
                                <span class="tag is-rounded is-black"><i class="fa-solid fa-house"></i></span>
                            }
                        </div>
                    </div>
                    <div class="list-item-controls">
                        <div class="buttons is-right is-hidden-mobile">
                            <a class="button" href="@(Url.PageLink(editPatientPage, null, new { id = i.Id }))">
                                <span class="icon is-small"><i class="fa-solid fa-magnifying-glass"></i></span>
                                <span>Anzeigen</span>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>


    </div>
</section>

@if (!Model.IsDisabled)
{
    <a href="@createUrl" class="button is-floating is-success">
        <i class="fa-solid fa-circle-plus"></i>
    </a>
}

@await Html.PartialAsync("_Footer")

@section Scripts
{
<script type="text/javascript">
$(function () {
    const elem = $('#@Html.IdFor(m => m.SearchTerms)');
    elem.focus();
    elem.prop({ 'selectionStart': 1000, 'selectionEnd': 1000 });

    $('#filterItems').change(function () {
        const filter = $(this).find(':selected').val();
        const url = new URL(window.location.href);
        url.searchParams.set('filter', filter);
        window.location.replace(url.href);
    });
});
</script>
}
